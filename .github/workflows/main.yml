name: Build and Deploy
run-name: Build and Deploy (${{ github.event.inputs.environment }})

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Build environment'
        type: environment
        default: staging
        required: true
      branch:
        description: 'Branch to checkout'
        type: string
        default: main
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      GENDAT_URL: ${{ secrets.GENDAT_URL }}
      GTM_ID: ${{ secrets.GTM_ID }}
      NEXT_TELEMETRY_DISABLED: 1
      NODE_OPTIONS: --max-old-space-size=5555

    steps:
      - uses: actions/checkout@v4
        with:
          repository: aspose/products.aspose.dev
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.REPO_TOKEN }}

      - uses: actions/setup-node@v4
      - run: npm install
      - run: npm run build

      - name: Prepare artifacts
        run: |
          tar -cJf _next.tar.xz -C ${{ github.workspace }}/out ./_next
          rm -rf ${{ github.workspace }}/out/_next
          tar -cJf html.tar.xz -C ${{ github.workspace }}/out ./

      - uses: actions/upload-artifact@v3
        with:
          path: '*.tar.xz'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    strategy:
      matrix:
        archive: [_next, html]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Extract artifacts
        run: |
          tar xJf artifact/${{ matrix.archive }}.tar.xz
          rm -rf artifact
      - name: Upload to S3
        run: aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET }} --cache-control public,max-age=97969,must-revalidate
